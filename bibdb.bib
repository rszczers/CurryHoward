@book{barendregt_dekkers_statman_2013, place={Cambridge}, series={Perspectives in Logic}, title={Lambda Calculus with Types}, DOI={10.1017/CBO9781139032636}, publisher={Cambridge University Press}, author={Barendregt, Henk and Dekkers, Wil and Statman, Richard}, year={2013}, collection={Perspectives in Logic}}

@article{barendregt_1991, title={Introduction to generalized type systems}, volume={1}, DOI={10.1017/S0956796800020025}, number={2}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Barendregt, Henk}, year={1991}, pages={125–154}}

@book{Urzyczyn2006,
 author = {S{\o}rensen, Morten Heine and Urzyczyn, Pawel},
 title = {Lectures on the Curry-Howard Isomorphism, Volume 149 (Studies in Logic and the Foundations of Mathematics)},
 year = {2006},
 isbn = {0444520775},
 publisher = {Elsevier Science Inc.},
 address = {New York, NY, USA},
} 


@book{Hindley:2008:LCI:1388400,
 author = {Hindley, J. Roger and Seldin, Jonathan P.},
 title = {Lambda-Calculus and Combinators: An Introduction},
 year = {2008},
 isbn = {0521898854, 9780521898850},
 edition = {2},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 
@inproceedings{Wadler1989,
 author = {Wadler, Philip},
 title = {Theorems for Free!},
 booktitle = {Proceedings of the Fourth International Conference on Functional Programming Languages and Computer Architecture},
 series = {FPCA '89},
 year = {1989},
 isbn = {0-89791-328-0},
 location = {Imperial College, London, United Kingdom},
 pages = {347--359},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/99370.99404},
 doi = {10.1145/99370.99404},
 acmid = {99404},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Wadler:2015:PT:2847579.2699407,
 author = {Wadler, Philip},
 title = {Propositions As Types},
 journal = {Commun. ACM},
 issue_date = {December 2015},
 volume = {58},
 number = {12},
 month = nov,
 year = {2015},
 issn = {0001-0782},
 pages = {75--84},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2699407},
 doi = {10.1145/2699407},
 acmid = {2699407},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{PeytonJones:1987:IFP:1096899,
 author = {Peyton Jones, Simon L.},
 title = {The Implementation of Functional Programming Languages (Prentice-Hall International Series in Computer Science)},
 year = {1987},
 isbn = {013453333X},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
}

@article{DBLP:journals/corr/abs-1303-5039,
  author    = {George Cherevichenko},
  title     = {New definitions of contexts and free variables for lambda-calculi
               with explicit substitutions},
  journal   = {CoRR},
  volume    = {abs/1303.5039},
  year      = {2013},
  url       = {http://arxiv.org/abs/1303.5039},
  archivePrefix = {arXiv},
  eprint    = {1303.5039},
  timestamp = {Mon, 13 Aug 2018 16:48:54 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1303-5039},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{deBruijnIndices,
author = {de Bruijn, N.G.},
year = {1972},
month = {12},
pages = {381-392},
title = {Lambda Calculus Notation with Nameless Dummies, a Tool for Automatic Formula Manipulation, with Application to the Church-Rosser Theorem},
volume = {75},
journal = {Indagationes Mathematicae (Proceedings)},
doi = {10.1016/1385-7258(72)90034-0}
}

@Unpublished{txa:alpha-draft,
  author = 	 {Thorsten Altenkirch},
  title = 	 {$\alpha$-conversion is easy},
  note = 	 {Under Revision},
  url = {https://www.cs.nott.ac.uk/~psztxa/publ/alpha-draft.pdf},
  OPTkey = 	 {},
  OPTmonth = 	 {},
  year =	 {2002},
  OPTannote = 	 {}
}

@article{STOUGHTON1988317,
title = "Substitution revisited",
journal = "Theoretical Computer Science",
volume = "59",
number = "3",
pages = "317 - 325",
year = "1988",
issn = "0304-3975",
doi = "https://doi.org/10.1016/0304-3975(88)90149-1",
url = "http://www.sciencedirect.com/science/article/pii/0304397588901491",
author = "Allen Stoughton",
abstract = "A definition of simultaneous substitution for the lambda calculus is presented that is easier to work with than standard single substitution because it is a definition by structural recursion, instead of recursion on the length of terms, and bound variables are always renamed. As a result, many proofs involving substitution are by structural induction, instead of induction on the length of terms, and are simpler than the corresponding standard proofs because of the reduction in the number of cases that must be considered. Furthermore, because of the uniform renaming of bound variables, identity substitutions normalize terms with respect to equivalence up to the renaming of bound variables (α-congruence), allowing induction-free proofs of some theorems that ordinarily would be proved by induction on the relation of α-congruence. A series of results relating simultaneous substitution and α-congruence are proved, and a simple proof of the “substitution lemma” of denotational semantics is given."
}
