@book{barendregt_dekkers_statman_2013, place={Cambridge}, series={Perspectives in Logic}, title={Lambda Calculus with Types}, DOI={10.1017/CBO9781139032636}, publisher={Cambridge University Press}, author={Barendregt, Henk and Dekkers, Wil and Statman, Richard}, year={2013}, collection={Perspectives in Logic}}

@article{barendregt_1991, title={Introduction to generalized type systems}, volume={1}, DOI={10.1017/S0956796800020025}, number={2}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={Barendregt, Henk}, year={1991}, pages={125–154}}

@book{Urzyczyn2006,
 author = {S{\o}rensen, Morten Heine and Urzyczyn, Pawel},
 title = {Lectures on the Curry-Howard Isomorphism, Volume 149 (Studies in Logic and the Foundations of Mathematics)},
 year = {2006},
 isbn = {0444520775},
 publisher = {Elsevier Science Inc.},
 address = {New York, NY, USA},
} 

@book{Hindley:2008:LCI:1388400,
 author = {Hindley, J. Roger and Seldin, Jonathan P.},
 title = {Lambda-Calculus and Combinators: An Introduction},
 year = {2008},
 isbn = {0521898854, 9780521898850},
 edition = {2},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@inproceedings{Wadler1989,
 author = {Wadler, Philip},
 title = {Theorems for Free!},
 booktitle = {Proceedings of the Fourth International Conference on Functional Programming Languages and Computer Architecture},
 series = {FPCA '89},
 year = {1989},
 isbn = {0-89791-328-0},
 location = {Imperial College, London, United Kingdom},
 pages = {347--359},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/99370.99404},
 doi = {10.1145/99370.99404},
 acmid = {99404},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{Wadler:2015:PT:2847579.2699407,
 author = {Wadler, Philip},
 title = {Propositions As Types},
 journal = {Commun. ACM},
 issue_date = {December 2015},
 volume = {58},
 number = {12},
 month = nov,
 year = {2015},
 issn = {0001-0782},
 pages = {75--84},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2699407},
 doi = {10.1145/2699407},
 acmid = {2699407},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{PeytonJones:1987:IFP:1096899,
 author = {Peyton Jones, Simon L.},
 title = {The Implementation of Functional Programming Languages (Prentice-Hall International Series in Computer Science)},
 year = {1987},
 isbn = {013453333X},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
}

@article{DBLP:journals/corr/abs-1303-5039,
  author    = {George Cherevichenko},
  title     = {New definitions of contexts and free variables for lambda-calculi
               with explicit substitutions},
  journal   = {CoRR},
  volume    = {abs/1303.5039},
  year      = {2013},
  url       = {http://arxiv.org/abs/1303.5039},
  archivePrefix = {arXiv},
  eprint    = {1303.5039},
  timestamp = {Mon, 13 Aug 2018 16:48:54 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-1303-5039},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{deBruijnIndices,
author = {de Bruijn, N.G.},
year = {1972},
month = {12},
pages = {381-392},
title = {Lambda Calculus Notation with Nameless Dummies, a Tool for Automatic Formula Manipulation, with Application to the Church-Rosser Theorem},
volume = {75},
journal = {Indagationes Mathematicae (Proceedings)},
doi = {10.1016/1385-7258(72)90034-0}
}

@Unpublished{txa:alpha-draft,
  author = 	 {Thorsten Altenkirch},
  title = 	 {$\alpha$-conversion is easy},
  note = 	 {Under Revision},
  url = {https://www.cs.nott.ac.uk/~psztxa/publ/alpha-draft.pdf},
  OPTkey = 	 {},
  OPTmonth = 	 {},
  year =	 {2002},
  OPTannote = 	 {}
}

@article{STOUGHTON1988317,
title = "Substitution revisited",
journal = "Theoretical Computer Science",
volume = "59",
number = "3",
pages = "317 - 325",
year = "1988",
issn = "0304-3975",
doi = "https://doi.org/10.1016/0304-3975(88)90149-1",
url = "http://www.sciencedirect.com/science/article/pii/0304397588901491",
author = "Allen Stoughton",
abstract = "A definition of simultaneous substitution for the lambda calculus is presented that is easier to work with than standard single substitution because it is a definition by structural recursion, instead of recursion on the length of terms, and bound variables are always renamed. As a result, many proofs involving substitution are by structural induction, instead of induction on the length of terms, and are simpler than the corresponding standard proofs because of the reduction in the number of cases that must be considered. Furthermore, because of the uniform renaming of bound variables, identity substitutions normalize terms with respect to equivalence up to the renaming of bound variables (α-congruence), allowing induction-free proofs of some theorems that ordinarily would be proved by induction on the relation of α-congruence. A series of results relating simultaneous substitution and α-congruence are proved, and a simple proof of the “substitution lemma” of denotational semantics is given."
}

@inproceedings{Koopman:2014:CED:2746325.2746330,
 author = {Koopman, Pieter and Plasmeijer, Rinus and Jansen, Jan Martin},
 title = {Church Encoding of Data Types Considered Harmful for Implementations: Functional Pearl},
 booktitle = {Proceedings of the 26Nd 2014 International Symposium on Implementation and Application of Functional Languages},
 series = {IFL '14},
 year = {2014},
 isbn = {978-1-4503-3284-2},
 location = {Boston, MA, USA},
 pages = {4:1--4:12},
 articleno = {4},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2746325.2746330},
 doi = {10.1145/2746325.2746330},
 acmid = {2746330},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Church Numbers, Data Types, Implementation, Parigot Encoding, Scott Encoding},
}

@techreport{Sussman:1975:IEL:889230,
 author = {Sussman, Gerald J. and Steele,Jr., Guy L.},
 title = {An Interpreter for Extended Lambda Calculus},
 year = {1975},
 source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Amitai%3AMIT-AILab%2F%2FAIM-349},
 publisher = {Massachusetts Institute of Technology},
 address = {Cambridge, MA, USA},
}

@book{PeytonJones:1992:IFL:129390,
 author = {Peyton Jones, Simon L. and Lester, David R.},
 title = {Implementing Functional Languages},
 year = {1992},
 isbn = {0-13-721952-0},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
} 

@inproceedings{Jansen:2013:P9C:2941698.2941710,
 author = {Jansen, Jan Martin},
 title = {Programming in the \(\lambda\)-Calculus: From Church to Scott and Back},
 booktitle = {Essays Dedicated to Rinus Plasmeijer on the Occasion of His 61st Birthday on The Beauty of Functional Code - Volume 8106},
 year = {2013},
 isbn = {978-3-642-40354-5},
 pages = {168--180},
 numpages = {13},
 url = {https://doi.org/10.1007/978-3-642-40355-2_12},
 doi = {10.1007/978-3-642-40355-2_12},
 acmid = {2941710},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@article{Hinze:2005:TPC:1037118.1037121,
 author = {Hinze, Ralf},
 title = {THEORETICAL PEARL Church Numerals, Twice!},
 journal = {J. Funct. Program.},
 issue_date = {January 2005},
 volume = {15},
 number = {1},
 month = jan,
 year = {2005},
 issn = {0956-7968},
 pages = {1--13},
 numpages = {13},
 url = {http://dx.doi.org/10.1017/S0956796804005313},
 doi = {10.1017/S0956796804005313},
 acmid = {1037121},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@article{hinze_2005,
 author = {Hinze, Ralf},
 title = {THEORETICAL PEARL Church Numerals, Twice!},
 journal = {J. Funct. Program.},
 issue_date = {January 2005},
 volume = {15},
 number = {1},
 month = jan,
 year = {2005},
 issn = {0956-7968},
 pages = {1--13},
 numpages = {13},
 url = {http://dx.doi.org/10.1017/S0956796804005313},
 doi = {10.1017/S0956796804005313},
 acmid = {1037121},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@book{Church1941-CHUTCO-7,
	author = {Alonzo Church},
	year = {1941},
	title = {The Calculi of Lambda-Conversion},
	publisher = {Princeton University Press}
}

@article{Hutton:1999:TUE:968578.968579,
 author = {Hutton, Graham},
 title = {A Tutorial on the Universality and Expressiveness of Fold},
 journal = {J. Funct. Program.},
 issue_date = {July 1999},
 volume = {9},
 number = {4},
 month = jul,
 year = {1999},
 issn = {0956-7968},
 pages = {355--372},
 numpages = {18},
 url = {http://dx.doi.org/10.1017/S0956796899003500},
 doi = {10.1017/S0956796899003500},
 acmid = {968579},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@inproceedings{Jensen_2006,
  author = {Jansen, Jan Martin and Koopman, Pieter and Plasmeijer, Rinus},
  year = {2006},
  month = {01},
  pages = {73-90},
  title = {Efficient Interpretation by Transforming Data Types and Patterns to Functions},
  journal = {Grana}
}

@inbook{Barendregt_1992,
author = {H. P. Barendregt},
year = {1992},
month = {01},
pages = {117-309},
title = {Lambda Calculi with Types},
volume = {2},
isbn = {0198537611}
}

@book{Barendregt_1984,
	year = {1984},
	author = {H. P. Barendregt},
	title = {The Lambda Calculus: Its Syntax and Semantics},
	publisher = {Elsevier}
}

@ARTICLE{Wells_98,
title = "Typability and type checking in system F are equivalent and undecidable",
abstract = "Girard and Reynolds independently invented System F (a.k.a. the second-order polymorphically typed lambda calculus) to handle problems in logic and computer programming language design, respectively. Viewing F in the Curry style, which associates types with untyped lambda terms, raises the questions of typability and type checking. Typability asks for a term whether there exists some type it can be given. Type checking asks, for a particular term and type, whether the term can be given that type. The decidability of these problems has been settled for restrictions and extensions of F and related systems and complexity lower-bounds have been determined for typability in F, but this report is the first to resolve whether these problems are decidable for System F. This report proves that type checking in F is undecidable, by a reduction from semi-unification, and that typability in F is undecidable, by a reduction from type checking. Because there is an easy reduction from typability to type checking, the two problems are equivalent. The reduction from type checking to typability uses a novel method of constructing lambda terms that simulate arbitrarily chosen type environments. All of the results also hold for the ?I-calculus. {\circledC} 1999 Published by Elsevier Science B.V. All rights reserved.",
keywords = "Lambda calculus, Semi-unification, System f, Typability, Type checking, Type inference",
author = "Wells, {J. B.}",
year = "1999",
month = "6",
day = "30",
language = "English",
volume = "98",
pages = "111--156",
journal = "Annals of Pure and Applied Logic",
issn = "0168-0072",
publisher = "Elsevier",
number = "1-3",
}

@article{DBLP:journals/corr/abs-cs-0701022,
  author    = {Mateusz Zakrzewski},
  title     = {Definable functions in the simply typed lambda-calculus},
  journal   = {CoRR},
  volume    = {abs/cs/0701022},
  year      = {2007},
  url       = {http://arxiv.org/abs/cs/0701022},
  archivePrefix = {arXiv},
  eprint    = {cs/0701022},
  timestamp = {Mon, 13 Aug 2018 16:47:41 +0200},
  biburl    = {https://dblp.org/rec/bib/journals/corr/abs-cs-0701022},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{Tait67,
	doi = {10.2307/2271658},
	year = {1967},
	number = {2},
	volume = {32},
	publisher = {Association for Symbolic Logic},
	pages = {198--212},
	title = {Intensional Interpretations of Functionals of Finite Type I},
	author = {W. W. Tait},
	journal = {Journal of Symbolic Logic}
}

@book{nederpelt_geuvers_2014, place={Cambridge}, title={Type Theory and Formal Proof: An Introduction}, DOI={10.1017/CBO9781139567725}, publisher={Cambridge University Press}, author={Nederpelt, Rob and Geuvers, Herman}, year={2014}}

@book{Girard:1989:PT:64805,
 author = {Girard, Jean-Yves and Taylor, Paul and Lafont, Yves},
 title = {Proofs and Types},
 year = {1989},
 isbn = {0-521-37181-3},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@article{Lof_96,
author = {Martin Lof, P},
year = {1996},
month = {01},
pages = {},
title = {On the Meanings of the Logical Constants and the Justifications of the Logical Laws},
volume = {1},
journal = {Nordic Journal of Philosophical Logic}
}

@book{Wittgenstein53,
	title = {Philosophical Investigations},
	year = {1953},
	author = {Ludwig Wittgenstein},
	publisher = {Wiley-Blackwell}
}

@article{Strachey2000,
 author = {Strachey, Christopher},
 title = {Fundamental Concepts in Programming Languages},
 journal = {Higher Order Symbol. Comput.},
 issue_date = {April 2000},
 volume = {13},
 number = {1-2},
 month = apr,
 year = {2000},
 issn = {1388-3690},
 pages = {11--49},
 numpages = {39},
 url = {https://doi.org/10.1023/A:1010000313106},
 doi = {10.1023/A:1010000313106},
 acmid = {609208},
 publisher = {Kluwer Academic Publishers},
 address = {Norwell, MA, USA},
 keywords = {CPL, L-values, R-values, ad hoc polymorphism, binding mechanisms, foundations of computing, functions as data, parameter passing, parametric polymorphism, programming languages, semantics, type completeness, variable binding},
} 

@article{Cardelli1985,
 author = {Cardelli, Luca and Wegner, Peter},
 title = {On Understanding Types, Data Abstraction, and Polymorphism},
 journal = {ACM Comput. Surv.},
 issue_date = {Dec. 1985},
 volume = {17},
 number = {4},
 month = dec,
 year = {1985},
 issn = {0360-0300},
 pages = {471--523},
 numpages = {53},
 url = {http://doi.acm.org/10.1145/6041.6042},
 doi = {10.1145/6041.6042},
 acmid = {6042},
 publisher = {ACM},
 address = {New York, NY, USA},
} 
